<configure xmlns="http://pylonshq.com/pyramid">

  <!-- this must be included for the view declarations to work -->
  <include package="pyramid_zcml" />

  <!-- include the standard views, resources -->
  <include package="cartouche" file="meta.zcml"/>
  <include package="cartouche" />

  <cartoucheauthenticationpolicy
    config_file="/dev/null"
    identifier_name="auth_tkt" />

  <aclauthorizationpolicy/>

  <!-- "deliver" mail by printing to the console -->
  <utility provides="repoze.sendmail.interfaces.IMailDelivery"
           factory=".testing.FauxMailDelivery" />

  <!-- Use module globals for storing pending registration info. -->
  <adapter provides="cartouche.interfaces.IRegistrations"
           name="pending"
           for="*"
           factory=".testing.FauxPendingRegistrations" />

  <!-- Use module globals for storing confirmed registration info. -->
  <adapter provides="cartouche.interfaces.IRegistrations"
           name="confirmed"
           for="*"
           factory=".testing.FauxConfirmedRegistrations" />

  <!-- Simple homepage for testing. -->
  <view
     context=".models.Root"
     view=".testing.homepage_view"
     renderer="templates/testing_homepage.pt"
     />

  <!-- Simple protected page for testing. -->
  <view
     context=".models.Root"
     name="protected.html"
     view=".testing.homepage_view"
     renderer="templates/testing_homepage.pt"
     permission="view"
     />

  <!-- Dump pending / confirmed registration info for testing. -->
  <view
     context=".models.Root"
     name="debug.html"
     view=".testing.debug_view"
     renderer="templates/testing_debug.pt"
     />

</configure>
