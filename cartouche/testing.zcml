<configure xmlns="http://pylonshq.com/pyramid">

  <!-- this must be included for the view declarations to work -->
  <include package="pyramid.includes" />

  <!-- include the standard views, resources -->
  <include package="cartouche" />

  <!-- "deliver" mail by printing to the console -->
  <utility provides="repoze.sendmail.interfaces.IMailDelivery"
           factory=".testing.FauxMailDelivery" />

  <!-- enable auto-login to allowing editing after confirming
       registration / password reset. -->
  <utility provides="cartouche.interfaces.IAutoLogin"
           component="cartouche.registration.autoLoginViaAuthTkt" />

  <!-- Use module globals for storing pending registration info. -->
  <adapter provides="cartouche.interfaces.IRegistrations"
           name="pending"
           for="*"
           factory=".testing.FauxPendingRegistrations" />

  <!-- Use module globals for storing confirmed registration info. -->
  <adapter provides="cartouche.interfaces.IRegistrations"
           name="confirmed"
           for="*"
           factory=".testing.FauxConfirmedRegistrations" />

  <!-- Simple homepage for testing. -->
  <view
     context=".models.Root"
     view=".testing.homepage_view"
     renderer="templates/testing_homepage.pt"
     />

  <!-- Dump pending / confirmed registration info for testing. -->
  <view
     context=".models.Root"
     name="debug.html"
     view=".testing.debug_view"
     renderer="templates/testing_debug.pt"
     />

</configure>
