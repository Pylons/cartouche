``cartouche`` TOODs
===================


Registration
------------

- [X] Define "minimal" registration schema using ``deform``.

      * ``email`` is only initially-required fields.

      * Seve a quasi-random token in a persistent mapping, 
        keyed by e-mail address.

      * Redirect to URL with ``email`` in query string.

      * Send confirmation e-mail with token to be cut and pasted into
        the second page.
        
      * Include a link to the confirm page in the mail.

- [X] When token confirmed, add e-mail-confirmed user to ``ZODB`` user store.

      * Auto-login the user using the ``repoze.who`` API.

      * Redirect to the configured welcome page.

- [X] Default welcome page shows logged-in user links to set up profile:

      * Shows user that she is logged in, with ``email`` as login ID.

      * Link to the update-my-login-password-and-security-question page.

      * Link to the edit-my-profile page.


Update Account Login
--------------------

- [/] Update login / password / security question.

      * Allow user to pick login name, defaulting to e-mail address.

      o *If* the existing password is set, query for it.

      * Allow the user to enter and confirm a password.

      * Hash password using ``zope.password`` utility.

      * Update the security question and answer.

      * Store the updated record both by email and by (new) login;
        remove any record for the old login.

      o Check for uniqueness of login.


Login / Logout
--------------

- [/] Implement view following the ``repoze.who`` 2.0 docs.

      o Compare passwords using ``zope.password`` utility.


Password Recovery / Reset
-------------------------

- [_] TBD


Profile Editing
---------------

- [_] Use configured "full" registration schema defined using ``deform``.


User / Group Administration
---------------------------

- [_] TBD
