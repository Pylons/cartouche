``cartouche`` TOODs
===================


Registration
------------

- [X] Define "minimal" registration schema using ``deform``.

      * ``email`` is only initially-required fields.

      * Seve a quasi-random token in a persistent mapping, 
        keyed by e-mail address.

      * Redirect to URL with ``email`` in query string.

      * Send confirmation e-mail with token to be cut and pasted into
        the second page.
        
      * Include a link to the confirm page in the mail.

      * Make confirmation URL configurable via Pyramid ``settings``.

- [Xj When token confirmed, add e-mail-confirmed user to ``ZODB`` user store.

      * Auto-login the user using the ``repoze.who`` API.

      * Redirect to the "edit account" page by default (configurable
        via the Pyramid ``settings``).


Update Account Login
--------------------

- [X] Update login / password / security question.

      * Allow user to pick login name, defaulting to e-mail address.

      * *If* the existing password is set, query for it.

      * Allow the user to enter and confirm a password.

      * Hash password using ``zope.password`` utility.

      * Update the security question and answer.

      * Store the updated record both by email and by (new) login;
        remove any record for the old login.

      * Check for uniqueness of login name.

      * Make the "after edit" URL configurable via Pyramid ``settings``.


Login / Logout
--------------

- [/] Implement login view following the ``repoze.who`` 2.0 docs.

      * Compare passwords using ``zope.password`` utility.

      * Link to account recovery view.

      * Link to password reset view.

      o Handle ``came_from`` URLs properly.

- [X] Implement logout view following the ``repoze.who`` 2.0 docs.

      ? Display a confirmation dialog and require POST?


Account Recovery
----------------

- [_] Prompt the user for their e-mail address.

      o On POST, send the user an e-mail reminding them of their login name,
        and redirect to the login view.

      ? Should we tell the user if there is no matching email address?

      o Make login URL configurable via Pyramid ``settings``.


Password Reset
--------------

- [_] Prompt the user for their login name.

      o Hide the 'token' and 'password fields on initial GET.

      o On POST without token, generate and seve a quasi-random token
        on the user's record.  Render the form showing the token and
        password fields.

      o Send the user an e-mail containing the token, directing them to
        cut-and-paste it into the view.

      o Include a link to the view in the e-mail.

      o On POST with mismatched token, display an error.

      o On POST with the matching token, update the user's password. and
        redirect to the login view.

      o Make login URL configurable via Pyramid ``settings``.


User / Group Administration
---------------------------

- [_] TBD
